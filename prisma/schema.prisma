// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  password String
  user     User?
  deleted  DateTime?
}

model User {
  fName            String
  lName            String
  avatarUrl        String?           @default("https://lufejtvrvbpzymuvzvsl.supabase.co/storage/v1/object/public/postify/avatars/avatar.png")
  role             Role              @default(USER)
  account          Account           @relation(fields: [accountId], references: [id])
  accountId        Int               @id @unique @map("userId")
  posts            Post[]
  comments         Comment[]
  postTags         PostTag[]
  postReactions    PostReaction[]
  commentReactions CommentReaction[]
  deleted          DateTime?
}

model Post {
  id        Int            @id @default(autoincrement())
  title     String
  body      String
  author    User           @relation(fields: [authorId], references: [accountId])
  authorId  Int
  postTags  PostTag[]
  comments  Comment[]      @relation(name: "post_comment")
  reactions PostReaction[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  deleted   DateTime?
}

model Comment {
  id        Int               @id @default(autoincrement())
  body      String
  author    User              @relation(fields: [authorId], references: [accountId])
  authorId  Int
  post      Post?             @relation(name: "post_comment", fields: [postId], references: [id])
  postId    Int?
  replyTo   Comment?          @relation(name: "comment_reply", fields: [replyToId], references: [id])
  replyToId Int?
  replies   Comment[]         @relation(name: "comment_reply")
  reactions CommentReaction[]
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  deleted   DateTime?
}

model PostTag {
  name      String @id @unique
  posts     Post[]
  followers User[]
}

model PostReaction {
  type   ReactionType
  post   Post         @relation(fields: [postId], references: [id])
  postId Int
  user   User         @relation(fields: [userId], references: [accountId])
  userId Int

  @@id([userId, postId])
}

model CommentReaction {
  type      ReactionType
  comment   Comment      @relation(fields: [commentId], references: [id])
  commentId Int
  user      User         @relation(fields: [userId], references: [accountId])
  userId    Int

  @@id([userId, commentId])
}

enum Role {
  USER
  MODERATOR
  ADMINISTRATOR
}

enum ReactionType {
  LIKE
  LOVE
  HAHA
  WOW
  SAD
  HATE
}
